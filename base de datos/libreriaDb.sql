CREATE SCHEMA libreriadb;

CREATE table products(
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(100) NOT NULL,
    author VARCHAR(50) NOT NULL,
    publisherId INT UNSIGNED NOT NULL,
    datePublished DATE,
    pages SMALLINT UNSIGNED,
    price FLOAT UNSIGNED,
    isbn VARCHAR(100),
    image VARCHAR(50),
    categoryId INT UNSIGNED,
    subCategoryId INT UNSIGNED,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME ON UPDATE CURRENT_TIMESTAMP, 
    deletedAt DATETIME 
);

CREATE table categories(
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(50),
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME ON UPDATE CURRENT_TIMESTAMP, 
    deletedAt DATETIME 
);

CREATE table subCategories(
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    categoryId INT UNSIGNED NOT NULL ,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME ON UPDATE CURRENT_TIMESTAMP, 
    deletedAt DATETIME 
);

CREATE table publishers(
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(50),
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME ON UPDATE CURRENT_TIMESTAMP, 
    deletedAt DATETIME 
);

CREATE table items(
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    userId INT UNSIGNED,
	title VARCHAR(100) NOT NULL,
    price FLOAT UNSIGNED,
    isbn VARCHAR(100),
    image VARCHAR(50),
    quantity SMALLINT UNSIGNED,
    total FLOAT UNSIGNED,
    status INT UNSIGNED,
    orderId INT UNSIGNED,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME ON UPDATE CURRENT_TIMESTAMP, 
    deletedAt DATETIME 
);

CREATE table orders(
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    orderNumber INT UNSIGNED,
    total FLOAT UNSIGNED,
    userId INT UNSIGNED,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME ON UPDATE CURRENT_TIMESTAMP, 
    deletedAt DATETIME 
);

CREATE table users(
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    userName VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    password VARCHAR(50) NOT NULL,
    admin SMALLINT UNSIGNED NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME ON UPDATE CURRENT_TIMESTAMP, 
    deletedAt DATETIME 
);



ALTER TABLE subcategories
ADD FOREIGN KEY(categoryId) REFERENCES categories(id);

ALTER TABLE products
ADD FOREIGN KEY(categoryId) REFERENCES categories(id),
ADD FOREIGN KEY(subCategoryId) REFERENCES subcategories(id);


ALTER TABLE products 
ADD FOREIGN KEY(publisherId) REFERENCES publishers(id);

ALTER TABLE orders
ADD FOREIGN KEY(userId) REFERENCES users(id);

ALTER TABLE items
ADD FOREIGN KEY(userId) REFERENCES users(id),
ADD FOREIGN KEY(orderId) REFERENCES orders(id);

ALTER TABLE users
ADD orderId INT UNSIGNED 
AFTER admin;

ALTER TABLE users 
ADD FOREIGN KEY(orderId) REFERENCES orders(id);

ALTER TABLE products
ADD description TEXT
AFTER image;

ALTER TABLE products
ADD cover VARCHAR(50)
AFTER image;

ALTER TABLE users
ADD image VARCHAR(100)
AFTER orderId;

ALTER TABLE `libreriadb`.`users` 
CHANGE COLUMN `password` `password` VARCHAR(200) NOT NULL ;

ALTER TABLE items
ADD publisherId INT UNSIGNED NOT NULL
AFTER isbn;

ALTER TABLE items
ADD FOREIGN KEY (publisherId) REFERENCES publishers(id);

ALTER TABLE items
ADD author VARCHAR(50) NOT NULL
AFTER title;

CREATE TABLE monthlyAuthors (
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
	image VARCHAR(50) NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME ON UPDATE CURRENT_TIMESTAMP, 
    deletedAt DATETIME 
);

ALTER TABLE categories
ADD recommended INT NOT NULL DEFAULT 0 
AFTER deletedAt;
